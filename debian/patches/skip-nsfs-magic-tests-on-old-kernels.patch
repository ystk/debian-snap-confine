From b30f09f8961ff623995a19e6456f2292b7b6e93c Mon Sep 17 00:00:00 2001
From: Zygmunt Krynicki <zygmunt.krynicki@canonical.com>
Date: Tue, 20 Sep 2016 13:15:51 +0200
Subject: [PATCH] Skip tests that require Linux kernel 3.19+

The test sanity code that checks if /proc/self/ns/mnt is an NSFS_MAGIC
filesystem is skipped if invoked on a Kernel older than 3.19. This lets
the package build in an older kernel and a newer chroot sensibly (e.g.
in a launchpad builder).

Signed-off-by: Zygmunt Krynicki <zygmunt.krynicki@canonical.com>

Index: snap-confine-1.0.41/src/ns-support-test.c
===================================================================
--- snap-confine-1.0.41.orig/src/ns-support-test.c
+++ snap-confine-1.0.41/src/ns-support-test.c
@@ -22,6 +22,7 @@
 
 #include <errno.h>
 #include <linux/magic.h>	// for NSFS_MAGIC
+#include <sys/utsname.h>
 #include <sys/vfs.h>
 
 #include <glib.h>
@@ -317,6 +318,22 @@ static void test_sc_initialize_ns_groups
 // expect, aka NSFS_MAGIC.
 static void test_nsfs_fs_id()
 {
+	struct utsname uts;
+	if (uname(&uts) < 0) {
+		g_test_message("cannot use uname(2)");
+		g_test_fail();
+		return;
+	}
+	int major, minor;
+	if (sscanf(uts.release, "%d.%d", &major, &minor) != 2) {
+		g_test_message("cannot use sscanf(2) to parse kernel release");
+		g_test_fail();
+		return;
+	}
+	if (major < 3 || (major == 3 && minor < 19)) {
+		g_test_skip("this test needs kernel 3.19+");
+		return;
+	}
 	struct statfs buf;
 	int err = statfs("/proc/self/ns/mnt", &buf);
 	g_assert_cmpint(err, ==, 0);
